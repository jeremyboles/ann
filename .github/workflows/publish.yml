name: Publish

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    env:
      MIX_ENV: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - name: Install package for cloudflared
        run: |
          sudo wget https://github.com/cloudflare/cloudflared/releases/download/2022.5.2/cloudflared-fips-linux-amd64.deb
          sudo dpkg -i ./cloudflared-linux-amd64.deb
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          name: id_ed25519
          config: |
            Host ${{ secrets.SSH_HOST }}
              IdentityFile ~/.ssh/id_ed25519
              ProxyCommand cloudflared access ssh --hostname %h --log-level debug --service-token-id ${{ secrets.CF_CLIENT_ID }} --service-token-secret ${{ secrets.CF_CLIENT_SECRET }}
              User ${{ secrets.SSH_USER }}
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: 1.13.3
          otp-version: 24.1.5
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.2"

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: prod-${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: prod-${{ runner.os }}-build-
      - name: Install dependencies
        run: |
          mix deps.get --only prod
          mix esbuild.install
          mix sass.install
      - name: Install NPM dependencies
        run: mix npm.get
      - name: Compile app code
        run: mix compile
      - name: Build and package assets
        run: mix assets.deploy
      - name: Create an asset manifest
        run: mix phx.digest
      - name: Build release
        run: mix release --overwrite

      - name: Deploy replease with rsync
        run: rsync --checksum --compress --copy-links --delete --human-readable --partial --recursive --verbose ./_build/prod/ ${{ secrets.SSH_HOST }}:/srv/ann
      - name: Restart the server
        run: ssh -tt ${{ secrets.SSH_HOST }} "sudo systemctl restart ann"
