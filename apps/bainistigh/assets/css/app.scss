@use "prosemirror.css";

@use "../../../../assets/css/palette";

//
// Define the CSS font-face declarations for each of the fonts
// -----------------------------------------------------------------------------------------------

$visby-round-stack: (
  normal: (
    200: "/fonts/visby-round/VisbyRoundCF-ExtraLight",
    300: "/fonts/visby-round/VisbyRoundCF-Light",
    400: "/fonts/visby-round/VisbyRoundCF-Regular",
    500: "/fonts/visby-round/VisbyRoundCF-Medium",
    600: "/fonts/visby-round/VisbyRoundCF-DemiBold",
    700: "/fonts/visby-round/VisbyRoundCF-Bold",
    800: "/fonts/visby-round/VisbyRoundCF-ExtraBold",
    900: "/fonts/visby-round/VisbyRoundCF-Heavy",
  ),
  italic: (
    200: "/fonts/visby-round/VisbyRoundCF-ExtraLightOblique",
    300: "/fonts/visby-round/VisbyRoundCF-LightOblique",
    400: "/fonts/visby-round/VisbyRoundCF-RegularOblique",
    500: "/fonts/visby-round/VisbyRoundCF-MediumOblique",
    600: "/fonts/visby-round/VisbyRoundCF-DemiBoldOblique",
    700: "/fonts/visby-round/VisbyRoundCF-BoldOblique",
    800: "/fonts/visby-round/VisbyRoundCF-ExtraBoldOblique",
    900: "/fonts/visby-round/VisbyRoundCF-HeavyOblique",
  ),
);

$font-stacks: (
  "Visby Round": $visby-round-stack,
);

//
// Named font stacks
// -----------------------------------------------------------------------------------------------

$fonts: (
  sans: "'Visby Round', ui-serif, serif",
);

@each $family, $stack in $font-stacks {
  @each $style, $weights in $stack {
    @each $weight, $path in $weights {
      @font-face {
        font-display: swap;
        font-family: $family;
        font-style: $style;
        font-weight: $weight;
        src: url("#{$path}.woff2") format("woff2"), url("#{path}.woff") format("woff");
      }
    }
  }
}

//
// Define CSS custom properties for font stacks
// -----------------------------------------------------------------------------------------------

:root {
  @each $font, $stack in $fonts {
    --font-#{$font}: #{$stack};
  }
}

//
// Global settings
// -----------------------------------------------------------------------------------------------

:root {
  --header-height: 50px;

  color-scheme: light dark;
}

//
// Root-level element
// -----------------------------------------------------------------------------------------------

* {
  box-sizing: border-box;
}

html {
  min-height: 100vh;
}

body {
  --body-background-color: #{palette.stone($lightness: 98%)};
  --body-color: #{palette.stone($lightness: 3%)};

  @media (prefers-color-scheme: dark) {
    --body-background-color: #{palette.stone($lightness: 9%)};
    --body-color: #{palette.stone($lightness: 96%)};
  }

  background-color: var(--body-background-color);
  color: var(--body-color);
  font-family: var(--font-sans);
  font-size: 12px;
  margin: 0;
  -webkit-font-smoothing: subpixel-antialiased;

  @media (any-pointer: coarse) {
    font-size: 14px;
  }
}

//
// Section header base styles
// -----------------------------------------------------------------------------------------------

.section-header {
  --background-color: #{palette.stone($lightness: 91%)};
  --border-color: #{palette.stone($lightness: 83%)};

  @media (prefers-color-scheme: dark) {
    --background-color: #{palette.stone($lightness: 12%)};
    --border-color: #{palette.stone($lightness: 2%)};
  }

  align-items: center;
  background-color: var(--background-color);
  border-bottom: var(--border-color) solid 1px;
  display: flex;
  left: 0;
  height: var(--header-height);
  position: fixed;
  right: 0;
  padding: 0 8px;
  top: var(--banner-height);
}

//
// Section imports
// -----------------------------------------------------------------------------------------------

@import "./layout/banner";

@import "./wiki";
