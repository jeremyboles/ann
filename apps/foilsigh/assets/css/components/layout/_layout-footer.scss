// -----------------------------------------------------------------------------------------------
//
// Footer component
//
// -----------------------------------------------------------------------------------------------

@use "../../../../../../assets/css/palette";
@use '../../utils/grid';
@use '../../utils/val';

.layout-footer {
  background-color: #{palette.stone($lightness: 14%)};
  color: #{palette.stone($lightness: 84%)};

  @media (prefers-color-scheme: dark) {
    background-color: #{palette.stone($lightness: 4%)};
    color: #{palette.stone($lightness: 94%)};
  }

  & > div {
    align-items: center;
    flex-direction: row-reverse;
    padding-block: #{val.rhythm(1)};
    row-gap: #{val.rhythm(1)};

    & > :first-of-type {
      grid-column-end: -1;
      grid-column-start: 1;
    }

    & > :last-of-type {
      grid-column-end: -1;
      grid-column-start: 1;
    }

    @include grid.columns(6) {
      & > :first-of-type,
      & > :last-of-type {
        grid-row: 1;
      }
    }

    /* prettier-ignore */
    @each $columns, $width in (6: 2, 8: 3, 12: 3, 16: 4) {
      @include grid.columns($columns) {
        & > :first-of-type {
          grid-column-start: span #{$width};
        }

        & > :last-of-type {
          grid-column-end: span #{$columns - $width};
        }
      }
    }
  }

  .logo {
    --logo-size: var(--text-step-1);
    justify-self: center;
    line-height: #{val.rhythm(1)};

    @include grid.columns(6) {
      justify-self: end;
    }

    a {
      --logo-color: #{palette.stone($lightness: 88%)};
      --logo-color-hover: #{palette.stone($lightness: 78%)};

      @media (prefers-color-scheme: dark) {
        --logo-color: #{palette.stone($lightness: 98%)};
        --logo-color-hover: #{palette.stone($lightness: 86%)};
      }
    }
  }

  a {
    color: inherit !important;
    text-decoration-color: transparent !important;
    &:hover {
      color: #{palette.stone($lightness: 72%)} !important;
      text-decoration-color: #{palette.stone($lightness: 36%)} !important;
    }
  }

  p {
    // line-break: strict;
    max-inline-size: initial;
  }
}
