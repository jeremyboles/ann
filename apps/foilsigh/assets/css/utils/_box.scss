// -----------------------------------------------------------------------------------------------
//
// Block Utility
//
// -----------------------------------------------------------------------------------------------

@use "sass:map";

@use "../../../../../assets/css/palette";

@use './colors';
@use "./val";

//
// Background color
// -----------------------------------------------------------------------------------------------

@mixin bg($color) {
  background-color: #{colors.var($color, $ns: bg)};
  @if not map.has-key(colors.$bg, $color) {
    @warn "Unknown background color '#{$color}'.";
  }
}

//
// Hidden contents
// -----------------------------------------------------------------------------------------------

@mixin hidden-contents($size) {
  block-size: 0;
  inline-size: $size;
  overflow: hidden;
  padding-block-start: $size;
}

//
// Horizontal rule
// -----------------------------------------------------------------------------------------------

@mixin hr($position: val.rhythm(1), $size: 1px) {
  position: relative;
  &::before {
    background-color: var(--color-main-border);
    block-size: $size;
    content: "";
    display: block;
    inline-size: 100%;
    position: absolute;
    transform: translateY(calc((#{$position} * -1) - $size));
  }
}

//
// Rounds the corner
// -----------------------------------------------------------------------------------------------

@mixin rounded($radius: 0.25rem) {
  @if $radius == tight {
    $radius: 0.125em;
  }
  border-radius: var(--rounded-radius, $radius);
}

//
// Vertical rule
// -----------------------------------------------------------------------------------------------

@mixin vr($position: val.rhythm(1), $size: 1px) {
  position: relative;
  &::before {
    background-color: var(--color-main-border);
    block-size: 100%;
    content: "";
    display: block;
    inline-size: $size;
    left: calc((#{$position} * -1) - $size);
    position: absolute;
  }
}
