// -----------------------------------------------------------------------------------------------
//
// Named Color Definitions
//
// -----------------------------------------------------------------------------------------------

@use "../../../../../assets/css/palette";

//
// Define named text colors
// -----------------------------------------------------------------------------------------------

/* prettier-ignore */
$text: (
  main: palette.stone($lightness: 18%) palette.stone($lightness: 86%),
  secondary: palette.stone($lightness: 30%) palette.stone($lightness: 68%),
  tertiary: palette.stone($lightness: 42%) palette.stone($lightness: 58%),
  
  emphasized: palette.stone($lightness: 6%) palette.stone($lightness: 94%),
  faded: palette.stone($lightness: 62%) palette.stone($lightness: 34%),
  invert: palette.stone($lightness: 94%) palette.stone($lightness: 6%)
);

//
// Defined named colors for background
// -----------------------------------------------------------------------------------------------

/* prettier-ignore */
$bg: (
    main: palette.stone($lightness: 92%) palette.stone($lightness: 14%),
    faded: palette.stone($lightness: 90%) palette.stone($lightness: 12%),
    
    bold: palette.stone($lightness: 12%) palette.stone($lightness: 90%),
    canvas: palette.stone($lightness: 95%) palette.stone($lightness: 8%),
    journal-icon: palette.stone($lightness: 56%) palette.stone($lightness: 20%),
);

//
// Defined named colors for border
// -----------------------------------------------------------------------------------------------

/* prettier-ignore */
$border: (
    main: palette.stone($lightness: 82%) palette.stone($lightness: 20%),
  
    dark: palette.stone($lightness: 66%) palette.stone($lightness: 42%),  
    emphasized: palette.stone($lightness: 80%) palette.stone($lightness: 22%),
    subtle: palette.stone($lightness: 88%) palette.stone($lightness: 16%)
);

//
// Define named colors for displaying maps
// -----------------------------------------------------------------------------------------------

/* prettier-ignore */
$map: (
  background: palette.sky($lightness: 80%) palette.sky($lightness: 22%),
  border: palette.sky($lightness: 70%) palette.sky($lightness: 28%),
  land:  palette.emerald($lightness: 44%) palette.emerald($lightness: 26%),
  marker-primary: palette.red($lightness: 50%) palette.red($lightness: 78%),
  marker-secondary: palette.stone($lightness: 20%) palette.stone($lightness: 14%)
);

//
// Mix-in for setting CSS custom properties for colors easily
// -----------------------------------------------------------------------------------------------

@mixin prop($name, $value, $ns: false) {
  #{css-name($name, $ns)}: #{$value};
}

//
// Function for getting the CSS property name for a given color name
// -----------------------------------------------------------------------------------------------

@function css-name($name, $ns: false) {
  @if ($ns) {
    @return --color-#{$name}-#{$ns};
  } @else {
    @return --color-#{$name};
  }
}

//
// Function for outputting a named color as a CSS variable
// -----------------------------------------------------------------------------------------------

@function var($name, $default: false, $ns: false) {
  @if $default {
    @return #{"var("}#{css-name($name, $ns: $ns)}#{", "}#{$default}#{")"};
  } @else {
    @return #{"var("}#{css-name($name, $ns: $ns)}#{")"};
  }
}
